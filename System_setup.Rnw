\documentclass[11pt,twoside,a4paper]{article}

% TODO
% Frame around figure 1

%%\VignetteIndexEntry{System configuration}

%% BibTeX settings
\usepackage[authoryear,round]{natbib}

%% additional packages
\usepackage[latin1]{inputenc}
\usepackage{a4wide,graphicx,color,thumbpdf}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{url}
\usepackage{float}
\usepackage{listings}

% hyperref setup
\definecolor{Red}{rgb}{0.5,0,0}
\definecolor{Blue}{rgb}{0,0,0.5}
\def\code#1{\texttt{#1}}
\hypersetup{%
  pdftitle = {System Setup},
  pdfsubject = {},
  pdfkeywords = {raster},
  pdfauthor = {Lo\"{i}c Dutrieux},
  colorlinks = {true},
  linkcolor = {Blue},
  citecolor = {Blue},
  urlcolor = {Red},
  hyperindex = {true},
  linktocpage = {true},
}

\usepackage{Sweave} %% is essentially

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Setting up your system for Geo-scripting with R}
\author{Lo\"{i}c Dutrieux, Jan Verbesselt}

\maketitle

\section{Introduction}
Having your system properly set-up is a cricial step before starting any geo-processing with R. This short tutorial will guide you through some important steps that you should follw in order to have the required software installed and appropriately set-up. Figure~\ref{overview} provides an overview of the different components of the system and how they are connected with each others.


\begin{figure}[t]
  \centering
  \fbox{\includegraphics[height=0.6\textwidth]{figs/system_overview_2.png}}
  \caption [Caption for LOF]{System architecture overview}

  \label{overview}
\end{figure}

\section{On windows}

\subsection*{R and R Studio}
For information on how to install R and R Studio, please refer to the \href{http://cran.r-project.org/doc/manuals/r-devel/R-admin.html#Installing-R-under-Windows}{R installation manual for windows} and the \href{http://www.rstudio.com/ide/download/}{R Studio download page}.

\subsection*{Rtools}
RTools is essential if you want to build R package. It is relatively easy to install, simply download the binary associated with your R version from \href{http://cran.r-project.org/bin/windows/Rtools/}{this page}, and follow the instructions from the installer. When prompted for ''Edit the system path'', you must say yes.



\subsection*{GDAL/OGR/PROJ4 libraries}
Installing these libraries on Windows is not an absolute necessity, however they will come in handy if reprojecting data represent a large part of your work or if you plan on doing a lot of file format conversions. They are an absolute necessity if you have to work with hdf4 format data.\\
Many options are available for installing these libraries on Windows systems.
\begin{itemize}
\item FWTools.
\item Installation via OSGeo4W installer.
\item By installing Quantum GIS.
\end{itemize}
The two latter option should be prefered over FWTools since they contain the most up to date versions of gdal.\\*
Note that if you want to call some gdal utilities (i.e.: \code{gdalwarp}, \texttt{gdal\_translate}, \texttt{gdal\_merge.py}, etc) via \texttt{system()} command from R, you will need to append the bin directory containing gdal utilities to your user or system path.

\subsection*{Version control software}
Installing these software is not an absolute necessity, however it might come handy if you plan to implement some of the good practices discussed in Lesson 2. Refer to Lesson 2 for more details.

\subsubsection*{Git and SlickSVN}
Most likely you need one OR the other, depending on whether your repository is hosted on a git or Subversion version control system. Only git is required if you plan to follow the full tutorial of Lesson 2.\\* These software are very straightforward to install, simply download the executables and follow the instructions from the installer. \href{http://git-scm.com/downloads}{Git} download page, and \href{http://www.sliksvn.com/en/download}{slickSVN} download page.


\subsubsection*{Integration with the R Studio IDE}
It is possible that R Studio automatically detects Git and SlickSVN on your system, however this is not systematic. In case the Git/Svn buttons in R Studio are innactive (for instance under project - Create Project - Version Control), after installing either Git or SlickSVN, follow the steps described bellow.\\
Once SlikSVN (or git) has been installed, in order to allow it to interact with RStudio, its path has to be set. Conveniently that can be done directly from within RStudio. In R Studio, navigate to Tools - Options - Git/SVN - SVN (or Git) - Browse and select the SVN.exe (or git.exe) executable in C:/Program Files/SlikSVN/bin/ (or C:/Program Files/git/bin/)
Restart RStudio.

\subsection*{Specific R packages}
Not all packages are hosted on the CRAN package repository, this is the case for instance of the MODIS package that is maintained on R Forge, and requires an extra argument in the \code{install.packages()} function to be installed. The install line, to be copy pasted in the R shell is often given on the package R forge home page.

\subsection{Installing the rasta package in Windows}
We maintain a windows binaries version of the rasta package under \url{http://rasta.r-forge.r-project.org/rasta.zip}. Simply download it and install it on your system by pointing to the file you just downloaded in the package installation menu of R Studio. 

\section{Linux}
\subsection*{R and R Studio}
Information on how to install R and RStudio on linux systems can be found \href{http://cran.r-project.org/bin/linux/ubuntu/README}{here} and \href{http://www.rstudio.com/ide/download/desktop}{here}.
\subsection*{GDAL/OGR/PROJ4/GEOS libraries}
\subsubsection*{Debian/Ubuntu}
The easiest solution is probably to install these library directly from an apt repository. Recent versions of these libraries are maintained on the Ubuntu GIS ppa.
\noindent First add it to your list of ppa.
\begin{lstlisting}[language=bash]
  sudo add-apt-repository ppa:ubuntugis/ppa
  sudo apt-get update
\end{lstlisting}

\noindent Then install the libraries with apt-get.
\begin{lstlisting}[language=bash]
  sudo apt-get install gdal
  sudo apt-get install proj
  sudo apt-get install geos
\end{lstlisting}
Your system should be ready to install rgdal and rgeos R packages.



\subsubsection*{Redhat/CentOS}


\section{Mac}

\subsection{R and R Studio}

Download and install the latest R version available from: \url{http://cran.r-project.org/bin/macosx/}. Download and install the latest Rstudio Desktop from the \href{http://www.rstudio.com/ide/download/}{R Studio download page}.


\subsection{GDAL/OGR/PROJ4 libraries}
Installing these libraries on Mac is not required for the Geo-scripting course as the \emph{rgdal} and \emph{rgeos} R package contain the GDAL C++ library. However, they will come in handy if reprojecting data represent a large part of your work or if you plan on doing a lot of file format conversions. They are an absolute necessity if you have to work with hdf4 format data.\\

The best option for install RGDAL on mac is via the \href{http://www.kyngchaos.com/software/frameworks}{Kynchaos website}. At the time of writing this description install the \textbf{GDAL 1.10 Complete} set if you the GDAL library (not required for the coarse).  Check out a \href{http://spatial.ly/2010/11/installing-rgdal-on-mac-os-x/}{tutorial} if you need more info.

\subsection{Version control software}
Installing these software is not an absolute necessity, however it might come handy if you plan to implement some of the good practices discussed in Lesson 2. Refer to Lesson 2 for more details.

Most likely you need one OR the other, depending on whether your repository is hosted on a git or Subversion version control system. Only git is required if you plan to follow the full tutorial of Lesson 2. See here for an excellent and clear description for how \href{http://www.rstudio.com/ide/docs/version_control/overview}{to install SVN and Git on Mac so that you can use it within RStudio}. RStudio IDE should automatically be able to find SVN and Git.

See here for more info if needed: (1) \href{http://superuser.com/questions/455214/where-is-svn-on-os-x-mountain-lion}{extra info for OSX}. Git should be available to via Xcode, or (2) \href{http://apple.stackexchange.com/questions/18470/why-is-git-not-found-after-installing-os-x-lion}{this question} helps.

\subsection*{Specific R packages}
Not all packages are hosted on the CRAN package repository, this is the case for instance of the MODIS package that is maintained on R Forge, and requires an extra argument in the \code{install.packages()} function to be installed. The install line, to be copy pasted in the R shell is often given on the package R forge home page.

\subsection{Installing the rasta package on Mac}

<<eval=FALSE>>=
install.packages("rasta", repos="http://R-Forge.R-project.org", 
                 type = "source")
@

\subsection{Extra help}

Other links where you can find help:

\begin{itemize}
\item \href{http://stackoverflow.com/questions/12994351/git-installation-issue-in-mountain-lion-os-x-10-8}{Problem when install in Git on Mac Lion os x 10.8}
\end{itemize}


% \bibliographystyle{model5-names}
% \bibliography{refs}

\end{document}
